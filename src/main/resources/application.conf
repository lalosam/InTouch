InTouch {
  host=localhost
  port=9090
  realm=In Touch
  cert {
    password = T4nxPncuHX
    file = localhost.p12
  }

  services = [
    {
      id=vsChallenge
      version=v1
      type=db
      url="jdbc:mysql://localhost:3306/vs_challenge?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&useSSL=false"
      driverClassName="com.mysql.cj.jdbc.Driver"
      user=root
      password=rootroot
      validationQuery="SELECT 1"
      maxOpenConnections=5
    }
  ]

  vsChallenge {
    entities = [
      {
        id=events
        version=1
        type=GET
        query=["select * from vs_challenge.events"]
        roles = ["DBSERV1"]
      }
      {
        id=tickets
        version=1
        type=GET
        query=["select * from vs_challenge.tickets"]
        roles = ["DBSERV1"]
      }
      {
        id=ticketsByEvent
        version=1
        type=GET
        query=["select e.name, e.description, e.location, e.city, e.state, e.country, e.type, e.date, t.* from vs_challenge.tickets t join vs_challenge.events e on t.event_id=e.event_id where t.event_id = ${urlParam0} and t.quantity > 0"]
        roles = ["DBSERV1"]
      }
      {
        id=ticketsByEvent
        version=1
        type=POST
        query=["INSERT INTO vs_challenge.tickets (`event_id`, `section`, `row`, `quantity`, `price`) VALUES (${urlParam0}, ${section}, ${row}, ${quantity}, ${price})"]
        roles = ["DBSERV1"]
      }
      {
        id=soldTicket
        version=1
        type=PUT
        query=["UPDATE `vs_challenge`.`tickets` SET `quantity` = quantity -1 WHERE `ticket_id` = ${urlParam0}"]
        roles = ["DBSERV1"]
      }
      {
        id=bestSeat
        version=1
        type=GET
        query=["select e.name, e.description, e.location, e.city, e.state, e.country, e.type, e.date, t.*, s.value as score from ",
          "vs_challenge.tickets t join vs_challenge.events e on t.event_id=e.event_id ",
          "join vs_challenge.seat_value s on s.event_id = t.event_id and s.section = t.section and s.`row` = t.`row` ",
          "where t.event_id = ${urlParam0} and t.quantity > 0 order by s.value asc"]
        roles = ["DBSERV1"]
      }
      {
        id=bestValue
        version=1
        type=GET
        query=["select e.name, e.description, e.location, e.city, e.state, e.country, e.type, e.date, t.*, s.value * price as score from ",
          "vs_challenge.tickets t join vs_challenge.events e on t.event_id=e.event_id ",
          "join vs_challenge.seat_value s on s.event_id = t.event_id and s.section = t.section and s.`row` = t.`row` ",
          "where t.event_id = ${urlParam0} and t.quantity > 0 order by s.value * price asc"]
        roles = ["DBSERV1"]
      }
    ]
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = WARNING
  stdout-loglevel = "WARNING"
  log-config-on-start = off
  lifecycle = off
  fsm = off
}

