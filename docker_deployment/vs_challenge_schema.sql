-- MySQL Script generated by MySQL Workbench
-- Fri Sep 14 11:07:22 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema vs_challenge
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `vs_challenge` ;

-- -----------------------------------------------------
-- Schema vs_challenge
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `vs_challenge` DEFAULT CHARACTER SET utf8mb4 ;
USE `vs_challenge` ;

-- -----------------------------------------------------
-- Table `vs_challenge`.`events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vs_challenge`.`events` ;

CREATE TABLE IF NOT EXISTS `vs_challenge`.`events` (
  `event_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(200) NOT NULL,
  `location` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `date` DATETIME NOT NULL,
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`event_id`));

CREATE INDEX `city_idx` ON `vs_challenge`.`events` (`city` ASC, `date` ASC) VISIBLE;

CREATE INDEX `type_idx` ON `vs_challenge`.`events` (`type` ASC, `date` ASC) VISIBLE;

CREATE INDEX `date_idx` ON `vs_challenge`.`events` (`date` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `vs_challenge`.`referrer_token`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vs_challenge`.`referrer_token` ;

CREATE TABLE IF NOT EXISTS `vs_challenge`.`referrer_token` (
  `token` VARCHAR(45) NOT NULL,
  `referrer` VARCHAR(45) NOT NULL,
  `campaign` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`token`));


-- -----------------------------------------------------
-- Table `vs_challenge`.`customers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vs_challenge`.`customers` ;

CREATE TABLE IF NOT EXISTS `vs_challenge`.`customers` (
  `customer_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(10) NULL DEFAULT NULL,
  `name` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `email` VARCHAR(200) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `zipcode` INT NOT NULL,
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`customer_id`));

CREATE UNIQUE INDEX `email_idx` ON `vs_challenge`.`customers` (`email` ASC) VISIBLE;

CREATE INDEX `name_idx` ON `vs_challenge`.`customers` (`lastname` ASC, `name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `vs_challenge`.`referrals`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vs_challenge`.`referrals` ;

CREATE TABLE IF NOT EXISTS `vs_challenge`.`referrals` (
  `referrals_id` INT NOT NULL AUTO_INCREMENT,
  `event_id` INT NOT NULL,
  `referral_token` VARCHAR(45) NOT NULL,
  `session_id` VARCHAR(45) NOT NULL,
  `customer_id` INT NULL,
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`referrals_id`),
  CONSTRAINT `referrals_referrer_token_fk`
    FOREIGN KEY (`referral_token`)
    REFERENCES `vs_challenge`.`referrer_token` (`token`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `referrals_customers_fk`
    FOREIGN KEY (`customer_id`)
    REFERENCES `vs_challenge`.`customers` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `referrals_referrer_token_fk` ON `vs_challenge`.`referrals` (`referral_token` ASC) VISIBLE;

CREATE INDEX `referrals_customers_fk` ON `vs_challenge`.`referrals` (`customer_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `vs_challenge`.`sellers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vs_challenge`.`sellers` ;

CREATE TABLE IF NOT EXISTS `vs_challenge`.`sellers` (
  `seller_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(300) NOT NULL,
  `email` VARCHAR(300) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`seller_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vs_challenge`.`tickets`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vs_challenge`.`tickets` ;

CREATE TABLE IF NOT EXISTS `vs_challenge`.`tickets` (
  `ticket_id` INT NOT NULL AUTO_INCREMENT,
  `event_id` INT NOT NULL,
  `seller_id` INT NOT NULL,
  `section` INT NOT NULL,
  `row` VARCHAR(45) NOT NULL,
  `quantity` INT NOT NULL,
  `price` DECIMAL(8,2) NOT NULL,
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ticket_id`),
  CONSTRAINT `tickets_events_fk`
    FOREIGN KEY (`event_id`)
    REFERENCES `vs_challenge`.`events` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tickets_sellers_fk`
    FOREIGN KEY (`seller_id`)
    REFERENCES `vs_challenge`.`sellers` (`seller_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `event_idx` ON `vs_challenge`.`tickets` (`event_id` ASC) VISIBLE;

CREATE INDEX `place_idx` ON `vs_challenge`.`tickets` (`event_id` ASC, `section` ASC, `row` ASC) VISIBLE;

CREATE INDEX `tickets_sellers_fk_idx` ON `vs_challenge`.`tickets` (`seller_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `vs_challenge`.`seat_value`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vs_challenge`.`seat_value` ;

CREATE TABLE IF NOT EXISTS `vs_challenge`.`seat_value` (
  `event_id` INT NOT NULL,
  `section` INT NOT NULL,
  `row` VARCHAR(45) NOT NULL,
  `seat_score` DOUBLE NOT NULL,
  PRIMARY KEY (`event_id`, `section`, `row`));


-- -----------------------------------------------------
-- Table `vs_challenge`.`customer_address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vs_challenge`.`customer_address` ;

CREATE TABLE IF NOT EXISTS `vs_challenge`.`customer_address` (
  `address_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `address_1` VARCHAR(300) NOT NULL,
  `address_2` VARCHAR(150) NULL DEFAULT NULL,
  `city` VARCHAR(200) NOT NULL,
  `state` VARCHAR(200) NOT NULL,
  `province` VARCHAR(200) NOT NULL,
  `zipcode` INT NOT NULL,
  PRIMARY KEY (`address_id`),
  CONSTRAINT `customer_id`
    FOREIGN KEY (`customer_id`)
    REFERENCES `vs_challenge`.`customers` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `customer_id_idx` ON `vs_challenge`.`customer_address` (`customer_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `vs_challenge`.`issued_tickets`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vs_challenge`.`issued_tickets` ;

CREATE TABLE IF NOT EXISTS `vs_challenge`.`issued_tickets` (
  `emmited_ticket_id` INT NOT NULL AUTO_INCREMENT,
  `ticket_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `token` VARCHAR(300) NOT NULL,
  `payment_tx_id` INT NULL,
  `status` VARCHAR(50) NOT NULL,
  `session_id` VARCHAR(45) NOT NULL,
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`emmited_ticket_id`),
  CONSTRAINT `issuedtickets_tickets_fk`
    FOREIGN KEY (`ticket_id`)
    REFERENCES `vs_challenge`.`tickets` (`ticket_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `issuedtickets_customers_fk`
    FOREIGN KEY (`customer_id`)
    REFERENCES `vs_challenge`.`customers` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `issuedtickets_tickets_fk_idx` ON `vs_challenge`.`issued_tickets` (`ticket_id` ASC) VISIBLE;

CREATE INDEX `issuedtickets_customers_fk_idx` ON `vs_challenge`.`issued_tickets` (`customer_id` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
